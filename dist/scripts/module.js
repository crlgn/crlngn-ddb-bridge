var we=Object.defineProperty;var Le=Object.getPrototypeOf;var ve=Reflect.get;var pe=o=>{throw TypeError(o)};var Oe=(o,s,e)=>s in o?we(o,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[s]=e;var D=(o,s,e)=>Oe(o,typeof s!="symbol"?s+"":s,e),ee=(o,s,e)=>s.has(o)||pe("Cannot "+e);var F=(o,s,e)=>(ee(o,s,"read from private field"),e?e.call(o):s.get(o)),$=(o,s,e)=>s.has(o)?pe("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(o):s.set(o,e),G=(o,s,e,t)=>(ee(o,s,"write to private field"),t?t.call(o,e):s.set(o,e),e),K=(o,s,e)=>(ee(o,s,"access private method"),e);var he=(o,s,e)=>ve(Le(o),e,s);const y={toHit:{prop:"toHit",cls:"to hit",actionType:"attack",rollType:"attack"},damage:{prop:"damage",cls:"damage",actionType:"damage",rollType:"damage"},heal:{prop:"heal",cls:"heal",actionType:"heal",rollType:"heal"},save:{prop:"save",cls:"save",actionType:"save",rollType:"ability"},check:{prop:"check",cls:"check",actionType:"check",rollType:"ability"},custom:{prop:"custom",cls:"roll",actionType:"roll",rollType:"custom"},cast:{prop:"cast",cls:"cast",actionType:"cast",rollType:"cast"}},Y="crlngn-ddb-bridge",N="crlngn-ddb-bridge",W=["%cCarolingian DDB Bridge","color: #003377; font-weight: bold;","|"],ke=[{abbrev:"str",name:"strength"},{abbrev:"dex",name:"dexterity"},{abbrev:"con",name:"constitution"},{abbrev:"int",name:"intelligence"},{abbrev:"wis",name:"wisdom"},{abbrev:"cha",name:"charisma"}],O={CHAT_MESSAGE:"chatMessage",INIT:"init",READY:"ready",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",CREATE_CHAT_MESSAGE:"createChatMessage",RENDER_CHAT_MESSAGE:"renderChatMessage",CREATE_MEASURED_TEMPLATE:"createMeasuredTemplate",REFRESH_MEASURED_TEMPLATE:"refreshMeasuredTemplate",CLOSE_SETTINGS_CONFIG:"closeSettingsConfig"},E={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_ROLL_ABILITY_TEST:"dnd5e.preRollAbilityTest",PRE_ROLL_ABILITY_SAVE:"dnd5e.preRollAbilitySave",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrow",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_CLASS_HIT_POINTS:"dnd5e.preRollClassHitPoints",PRE_ROLL_CONCENTRATION:"dnd5e.preRollConcentration",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",PRE_ROLL_DEATH_SAVE:"dnd5e.preRollDeathSave",PRE_ROLL_FORMULA_V2:"dnd5e.preRollFormulaV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_NPC_HIT_POINTS:"dnd5e.preRollNPCHitPoints",PRE_ROLL_RECHARGE_V2:"dnd5e.preRollRechargeV2",PRE_ROLL_SKILL:"dnd5e.preRollSkill",PRE_ROLL_TOOL_CHECK:"dnd5e.preRollToolCheck",PRE_USE_ITEM:"dnd5e.preUseItem",ROLL_ABILITY_TEST:"dnd5e.rollAbilityTest",ROLL_ABILITY_SAVE:"dnd5e.rollAbilitySave",ROLL_ATTACK_V2:"dnd5e.rollAttackV2",ROLL_CLASS_HIT_POINTS:"dnd5e.rollClassHitPoints",ROLL_CONCENTRATION:"dnd5e.rollConcentration",ROLL_DEATH_SAVE:"dnd5e.rollDeathSave",ROLL_DAMAGE_V2:"dnd5e.rollDamageV2",ROLL_FORMULA_V2:"dnd5e.rollFormulaV2",ROLL_HIT_DIE_V2:"dnd5e.rollHitDieV2",ROLL_INITIATIVE:"dnd5e.rollInitiative",ROLL_NPC_HIT_POINTS:"dnd5e.rollNPCHitPoints",ROLL_RECHARGE_V2:"dnd5e.rollRechargeV2",ROLL_SKILL:"dnd5e.rollSkill",ROLL_TOOL_CHECK:"dnd5e.rollToolCheck",DISPLAY_CARD:"dnd5e.preDisplayCardV2",PRE_DISPLAY_CARD_V2:"dnd5e.preDisplayCardV2",RENDER_CHAT_MESSAGE:"dnd5e.renderChatMessage",PRE_LONG_REST:"dnd5e.preLongRest",PRE_REST_COMPLETED:"dnd5e.preRestCmpleted",PRE_SHORT_REST:"dnd5e.preShortRest",REST_COMPLETED:"dnd5e.restCmpleted",ACTIVITY_CONSUMPTION:"dnd5e.activityConsumption",POST_ACTIVITY_CONSUMPTION:"dnd5e.postActivityConsumption",POST_CREATE_USAGE_MESSAGE:"dnd5e.postCreateUsageMessage",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ACTIVITY_CONSUMPTION:"dnd5e.preActivityConsumption",PRE_CREATE_USAGE_MESSAGE:"dnd5e.preCreateUsageMessage",PRE_USE_ACTIVITY:"dnd5e.preUseActivity"},te={select:"select",checkbox:"checkbox"},se={client:"client",world:"world"},ye={debugMode:{tag:"debug-mode",label:"Debug Mode",hint:"Enable or disable debug messages on browser console",propType:Boolean,inputType:te.checkbox,default:!0,scope:se.client,config:!0},forceDDBGL:{tag:"force-ddbgl-settings",label:"Force DDB Gamelog settings",hint:"Automatically reset D&D Beyond Gamelog settings to make this module work better. Disabling this setting might disable integration with DDB Gamelog.",propType:Boolean,inputType:te.checkbox,default:!0,scope:se.world,config:!0},removeTemplate:{tag:"remove-template",label:"Remove Template after damage roll",hint:"When a spell has a template, remove the template after damage is rolled. This will only affect DDB Gamelog rolls. If the template has no damage roll, it is not removed.",propType:Boolean,inputType:te.checkbox,default:!0,scope:se.world,config:!0}};class _{static registerSettings(){document.querySelector("body").classList.add(N),Object.entries(ye).forEach(async e=>{const t=e[1];p.log("Registering... ",[e]),await game.settings.register(Y,t.tag,{name:t.label,hint:t.hint,default:t.default,type:t.propType,scope:t.scope,config:t.config,onChange:a=>_.apply(t.tag,a)}),_.get(t.tag)===void 0&&_.set(t.tag,t.default),p.log("registerSettings",[t.tag,_.get(t.tag)])})}static get(s,e=Y){if(!s)return null;let t=!1;if(e===Y)t=game.settings.get(e,s);else{let r=game.settings.storage.get("client")[`${e}.${s}`];r===void 0&&(r=game.settings.storage.get("world").getSetting(`${e}.${s}`)),t=r==null?void 0:r.value,p.log("GET Setting",[r,t])}return t}static set(s,e,t=Y){if(!s)return!1;let a=game.settings.storage.get("client")[`${t}.${s}`];a||(a=game.settings.storage.get("world").getSetting(`${t}.${s}`));try{a&&a.update({value:e}),p.log("Able to change setting",[s,a])}catch{p.log("Unable to change setting",[s,a])}return!0}static apply(s,e){switch(s){case ye.forceDDBGL.tag:_.resetGamelogSettings();break}}static resetGamelogSettings(){if(!w.isModuleOn("ddb-game-log"))return;const e=_.get("enable_chatcards","ddb-game-log"),t=_.get("force-ddbgl-settings");p.log("resetGamelogSettings",[e,t]),!e&&t&&_.set("enable_chatcards",!0,"ddb-game-log")}}class p{static log(s="",e=[],t=!1){try{const a=_.get(SETTINGS.debugMode.tag);if(!(t||a))return;console.log(...W,s,...e)}catch{console.log(...W,s,...e)}}static warn(s="",e=[]){console.warn(...W,s,...e)}static error(s,e){var t;e.ui&&((t=ui.notifications)==null||t.error(s,{localize:!0,permanent:e.permanent})),e.console&&console.error(...W,s)}}class w{static getTargets(s){var t;let e=s.targets||game.user.targets||((t=canvas.tokens)==null?void 0:t.controlled);return new Set([...e])}static getTargetDescriptors(){var e,t;const s=new Map;for(const a of game.user.targets){const{name:r}=a,{img:i,system:n,uuid:l,statuses:c}=a.actor??{};if(l){const m=c.has("coverTotal")?null:(t=(e=n.attributes)==null?void 0:e.ac)==null?void 0:t.value;s.set(l,{name:r,img:i,uuid:l,ac:m??null})}}return Array.from(s.values())}static getActorFromItem(s){const e=s.split(".")[1];return game.actors.get(e)}static isModuleOn(s){var t;const e=(t=game.modules)==null?void 0:t.get(s);return!!(e!=null&&e.active)}static parseDDBGLAbility(s){let e=null;const t=`${s}`;return ke.forEach(a=>{t.toLowerCase().includes(a.name)&&(e=a)}),e}static isPrivateRoll(s){return s===CONST.DICE_ROLL_MODES.BLIND||s===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(s){p.log("removeTemplateForItem - A",[s]);const e=_.get("remove-template");if(p.log("removeTemplateForItem - B",[e]),!e)return;const t=canvas.templates.objects.children.filter(a=>a.document.flags.dnd5e.item===(s==null?void 0:s.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",t.map(a=>a.id))}static html(s,e){return s.querySelector(e)}}class k{static getActivityFromItem(s,e){var l;let t=null;if(!s)return t;const a=(l=s.system)==null?void 0:l.activities,r=s.hasAttack,i=s.hasSave,n=c=>{const m=a.find(g=>g.type==c);return p.log("activityByType",[s,c,a.size,m]),m};switch(e){case y.toHit.cls:t=n(y.toHit.actionType);break;case y.damage.cls:r?t=n(y.toHit.actionType):i?t=n(y.save.actionType):t=n(y.damage.actionType);break;case y.check.cls:t=n(y.check.actionType);break;case y.save.cls:t=n(y.save.actionType);break;case y.heal.cls:t=n(y.heal.actionType);break;case y.cast.cls:t=n(y.cast.actionType);break}return t??Array.from(a.keys())[0]??null}static async ddbglUse(s,e={},t={},a={},r=!1){var d,u,T,h,f,b;if(!s){ui.notifications.error("No activity found",{localize:!1});return}if(!s.item.isEmbedded||s.item.pack)return;if(!s.item.isOwner){ui.notifications.error("DND5E.DocumentUseWarn",{localize:!0});return}if(!s.canUse){ui.notifications.error("DND5E.ACTIVITY.Warning.UsageNotAllowed",{localize:!0});return}let i=s.item.clone({},{keepId:!0});const n=s._prepareUsageConfig(e);(d=n.create)!=null&&d.measuredTemplate&&((u=ui.notifications)==null||u.info("Click the map to place the template and see the roll. Right click to cancel",{localize:!1}));const l=foundry.utils.mergeObject({configure:!0,applicationClass:s.metadata.usage.dialog},t),c=foundry.utils.mergeObject({create:!0,data:{flags:{dnd5e:{...s.messageFlags,messageType:"usage",use:{effects:(T=s.applicableEffects)==null?void 0:T.map(A=>A.id)}},rsr5e:{processed:!0,quickRoll:!1}}},hasConsumption:n.hasConsumption},a);if(Hooks.call("dnd5e.preUseActivity",s,n,l,c)===!1)return;await s._prepareUsageScaling(n,c,i),s=i.system.activities.get(s.id);const m=await s.consume(n,c);if(m===!1)return;const g={effects:[],templates:[],updates:m};if((h=n.concentration)!=null&&h.begin){const A=await i.actor.beginConcentrating(s,{"flags.dnd5e.scaling":n.scaling});if(A&&(g.effects??(g.effects=[]),g.effects.push(A),foundry.utils.setProperty(c.data,"flags.dnd5e.use.concentrationId",A.id)),(f=n.concentration)!=null&&f.end){const H=await i.actor.endConcentration(n.concentration.end);g.effects.push(...H)}}return c.data.rolls=(c.data.rolls??[]).concat(m.rolls),g.message=await k.createUsageMessage(s,c),g.message.dnd5e=((b=c.flags)==null?void 0:b.dnd5e)??{},g.message.dnd5e.targets=w.getTargetDescriptors(),g.message.flags={...g.message.flags,rsr5e:{processed:!0}},await s._finalizeUsage(n,g),Hooks.call("dnd5e.postUseActivity",s,n,g)===!1||r&&s._triggerSubsequentActions&&s._triggerSubsequentActions(n,g),g}static async createUsageMessage(s,e){let t=await s._usageChatContext(e),a=await Me(e.data.rolls);t={...t,rolls:a};const r=foundry.utils.mergeObject({rollMode:game.settings.get("core","rollMode"),data:{content:await renderTemplate(s.metadata.usage.chatCard,t),speaker:ChatMessage.getSpeaker({actor:s.item.actor}),flags:{core:{canPopout:!0},rsr5e:{processed:!0}}}},e);Hooks.callAll("dnd5e.preCreateUsageMessage",s,r),ChatMessage.applyRollMode(r.data,r.rollMode);const i=r.create===!1?r.data:await ChatMessage.create(r.data);return Hooks.callAll("dnd5e.postCreateUsageMessage",s,i),i}}const Me=async(o,s)=>{let e=[];return e=await Promise.all(o.map(async t=>{const a=await t.getTooltip();return{...t,formula:t.formula,total:t.total,tooltipHtml:a}})),e},{OperatorTerm:Ee,RollTerm:Ie}=foundry.dice.terms;function ae(o,{respectProperties:s}={}){const e=(r,i=[])=>[r,...s?Array.from(i).sort():[]].join(),t=new Map;for(const r of o){if(!r._evaluated)throw new Error("Only evaluated rolls can be aggregated.");for(const i of Pe(r.terms,r.options.type)){const n=e(i.type,r.options.properties);t.has(n)||t.set(n,{type:i.type,properties:new Set,terms:[]});const l=t.get(n);l.terms.push(new Ee({operator:i.negative?"-":"+"}),...i.terms),r.options.properties&&(l.properties=l.properties.union(new Set(r.options.properties)))}}const a=[];for(const r of t.values()){const i=new CONFIG.Dice.DamageRoll;i.terms=r.terms,i._total=i._evaluateTotal(),i._evaluated=!0,i.options={type:r.type,properties:Array.from(r.properties)},i.resetFormula(),a.push(i)}return a}function Pe(o,s){var n;const e=()=>{r.type??(r.type=s),a.push(r),r=null,i=!1},t=l=>l in CONFIG.DND5E.damageTypes||l in CONFIG.DND5E.healingTypes,a=[];let r,i=!1;for(let l of o){if(l instanceof Ee&&["+","-"].includes(l.operator)){r&&e(),l.operator==="-"&&(i=!i);continue}l=Ie.fromData(foundry.utils.deepClone(l.toJSON())),r??(r={terms:[],negative:i,type:null}),r.terms.push(l);const c=(n=l.flavor)==null?void 0:n.toLowerCase().trim();t(c)&&(r.type??(r.type=c),l.options.flavor="")}return r&&e(),a}const{ApplicationV2:Ne,HandlebarsApplicationMixin:He}=foundry.applications.api;class Ce extends He(Ne){get subtitle(){return game.i18n.localize(this.options.window.subtitle??"")}_configureRenderOptions(s){var e;super._configureRenderOptions(s),s.isFirstRender&&this.hasFrame&&(s.window||(s.window={}),(e=s.window).subtitle||(e.subtitle=this.subtitle))}async _prepareContext(s){const e=await super._prepareContext(s);return e.CONFIG=CONFIG.DND5E,e.inputs={...foundry.applications.fields,...dnd5e.applications.fields},e}async _renderFrame(s){var a,r;const e=await super._renderFrame(s),t=document.createElement("h2");if(t.classList.add("window-subtitle"),e.querySelector(".window-title").insertAdjacentElement("afterend",t),(((a=s.window)==null?void 0:a.icon)??"").includes(".")){const i=e.querySelector(".window-icon"),n=document.createElement((r=s.window.icon)!=null&&r.endsWith(".svg")?"dnd5e-icon":"img");n.classList.add("window-icon"),n.src=s.window.icon,i.replaceWith(n)}return e}_updateFrame(s){super._updateFrame(s),s.window&&"subtitle"in s.window&&(this.element.querySelector(".window-header > .window-subtitle").innerText=s.window.subtitle)}_onRender(s,e){super._onRender(s,e),this.element.querySelectorAll("multi-select").forEach(t=>{t.disabled||t.querySelectorAll(".tag").forEach(a=>{var r;a.classList.add("remove"),(r=a.querySelector(":scope > span"))==null||r.classList.add("remove")})}),this.element.querySelectorAll(".label-top > p.hint").forEach(t=>{const a=t.parentElement.querySelector(":scope > label");a&&(t.ariaLabel=t.innerText,t.dataset.tooltip=t.innerHTML,t.innerHTML="",a.insertAdjacentElement("beforeend",t))})}_disableFields(){const s=`.window-content :is(${["INPUT","SELECT","TEXTAREA","BUTTON","DND5E-CHECKBOX","COLOR-PICKER","DOCUMENT-TAGS","FILE-PICKER","HUE-SLIDER","MULTI-SELECT","PROSE-MIRROR","RANGE-PICKER","STRING-TAGS"].join(", ")}):not(.interface-only)`;for(const e of this.element.querySelectorAll(s))e.tagName==="TEXTAREA"?e.readOnly=!0:e.disabled=!0}}D(Ce,"DEFAULT_OPTIONS",{classes:["dnd5e2"],window:{subtitle:""}});const{DiceTerm:Fe}=foundry.dice.terms;var I,q,P,B,oe,J,De;const V=class V extends Ce{constructor(e={},t={},a={}){super(a);$(this,B);$(this,I);$(this,q);$(this,P);G(this,I,e),G(this,q,t),K(this,B,oe).call(this,foundry.utils.deepClone(F(this,I)))}static get rollType(){return CONFIG.Dice.BasicRoll}get config(){return F(this,I)}get message(){return F(this,q)}get rolls(){return F(this,P)}get rollType(){return this.options.rollType??this.constructor.rollType}_identifyDiceTerms(){let e=[],t=!0;const a=i=>{if(i instanceof Fe){if(!Number.isFinite(i.number)||!Number.isFinite(i.faces)||!this.options.rendering.dice.denominations.has(i.denomination))return t=!1;for(let n=0;n<i.number;n++)e.push({icon:`systems/dnd5e/icons/svg/dice/${i.denomination}.svg`,label:i.denomination,denomination:i.denomination})}},r=(i=[])=>{for(const n of i)a(n),"dice"in n&&r(n.dice)};if(this.rolls.forEach(i=>r(i.terms)),e.length>this.options.rendering.dice.max){const i=e.reduce((n,{icon:l,denomination:c})=>(n[c]??(n[c]={icon:l,count:0}),n[c].count++,n),{});e=Object.entries(i).map(([n,{icon:l,count:c}])=>({icon:l,label:`${c}${n}`})),e.length>this.options.rendering.dice.max&&(t=!1)}else e.length||(t=!1);return t?e:[]}async _preparePartContext(e,t,a){switch(t=await super._preparePartContext(e,t,a),e){case"buttons":return this._prepareButtonsContext(t,a);case"configuration":return this._prepareConfigurationContext(t,a);case"formulas":return this._prepareFormulasContext(t,a);default:return t}}async _prepareButtonsContext(e,t){return e.buttons={roll:{icon:'<i class="fa-solid fa-dice"></i>',label:game.i18n.localize("DND5E.Roll")}},e}async _prepareConfigurationContext(e,t){var a;return e.fields=[{field:new foundry.data.fields.StringField({label:game.i18n.localize("DND5E.RollMode")}),name:"rollMode",value:this.message.rollMode??((a=this.options.default)==null?void 0:a.rollMode),options:Object.entries(CONFIG.Dice.rollModes).map(([r,i])=>({value:r,label:game.i18n.localize(i)}))}],e}async _prepareFormulasContext(e,t){return e.rolls=this.rolls.map(a=>({roll:a})),e.dice=this._identifyDiceTerms()||[],e}_buildConfig(e,t,a){e=foundry.utils.mergeObject({parts:[],data:{},options:{}},e),Hooks.callAll("dnd5e.buildRollConfig",this,e,t,a);const r=t==null?void 0:t.get(`roll.${a}.situational`);return r&&e.situational!==!1?(e.parts.push("@situational"),e.data.situational=r):e.parts.findSplice(i=>i==="@situational"),e}_finalizeRolls(e){return this.rolls}rebuild(){this._onChangeForm(this.options.form,new Event("change"))}_onChangeForm(e,t){super._onChangeForm(e,t);const a=new FormDataExtended(this.element);a.has("rollMode")&&(this.message.rollMode=a.get("rollMode")),K(this,B,oe).call(this,foundry.utils.deepClone(F(this,I)),a),this.render({parts:["formulas"]})}_onClose(e={}){var t;(t=e.dnd5e)!=null&&t.submitted||G(this,P,[])}static async configure(e={},t={},a={}){return new Promise(r=>{const i=new this(e,a,t.options);i.addEventListener("close",()=>r(i.rolls),{once:!0}),i.render({force:!0})})}};I=new WeakMap,q=new WeakMap,P=new WeakMap,B=new WeakSet,oe=function(e,t){var r;const a=this.rollType;G(this,P,((r=e.rolls)==null?void 0:r.map((i,n)=>a.fromConfig(this._buildConfig(i,t,n),this.config)))??[])},J=new WeakSet,De=async function(e,t,a){var r,i;G(this,P,this._finalizeRolls((i=(r=e.submitter)==null?void 0:r.dataset)==null?void 0:i.action)),await this.close({dnd5e:{submitted:!0}})},$(V,J),D(V,"DEFAULT_OPTIONS",{classes:["roll-configuration","standard-form"],tag:"form",window:{title:"DND5E.RollConfiguration.Title",icon:"fa-solid fa-dice",minimizable:!1},form:{handler:K(V,J,De)},position:{width:400},rendering:{dice:{max:5,denominations:new Set(["d4","d6","d8","d10","d12","d20"])}}}),D(V,"PARTS",{formulas:{template:"systems/dnd5e/templates/dice/roll-formulas.hbs"},configuration:{template:"systems/dnd5e/templates/dice/roll-configuration.hbs"},buttons:{template:"systems/dnd5e/templates/dice/roll-buttons.hbs"}});let X=V;const x=class x extends X{static get rollType(){return CONFIG.Dice.DamageRoll}async _prepareButtonsContext(s,e){var a;const t=((a=this.config.critical)==null?void 0:a.allow)!==!1;return s.buttons={critical:{icon:'<i class="fa-solid fa-bomb"></i>',label:game.i18n.localize("DND5E.CriticalHit")},normal:{icon:'<i class="fa-solid fa-dice"></i>',label:game.i18n.localize(t?"DND5E.Normal":"DND5E.Roll")}},t||delete s.buttons.critical,s}async _prepareFormulasContext(s,e){s=await super._prepareFormulasContext(s,e);const t=foundry.utils.mergeObject(CONFIG.DND5E.damageTypes,CONFIG.DND5E.healingTypes,{inplace:!1});return s.rolls=s.rolls.map(({roll:a})=>{var r,i;return{roll:a,damageConfig:t[a.options.type]??t[(r=a.options.types)==null?void 0:r[0]],damageTypes:((i=a.options.types)==null?void 0:i.length)>1?Object.entries(t).map(([n,l])=>{var c;return(c=a.options.types)!=null&&c.includes(n)?{value:n,label:l.label}:null}).filter(n=>n):null}}),s}_buildConfig(s,e,t){s=super._buildConfig(s,e,t);const a=e==null?void 0:e.get(`roll.${t}.damageType`);return a&&(s.options.type=a),s}_finalizeRolls(s){return this.rolls.map(e=>(e.options.isCritical=s==="critical",e.configureDamage({critical:this.config.critical}),e))}};D(x,"PARTS",{...he(x,x,"PARTS"),formulas:{template:"systems/dnd5e/templates/dice/damage-formulas.hbs"}});let ce=x;function re(o,s){if(!o)return!1;const e={},t=(a,r)=>{e[a]=r,KeyboardManager.MODIFIER_CODES[a].forEach(i=>e[i]=r)};return t(KeyboardManager.MODIFIER_KEYS.CONTROL,o.ctrlKey||o.metaKey),t(KeyboardManager.MODIFIER_KEYS.SHIFT,o.shiftKey),t(KeyboardManager.MODIFIER_KEYS.ALT,o.altKey),game.keybindings.get("dnd5e",s).some(a=>game.keyboard.downKeys.has(a.key)&&a.modifiers.every(r=>e[r])?!0:a.modifiers.length?!1:e[a.key])}const{DiceTerm:$e,NumericTerm:Ge}=foundry.dice.terms,U=class U extends Roll{static fromConfig(s,e){const t=(s.parts??[]).join(" + ");return new this(t,s.data,s.options)}static async build(s={},e={},t={}){var r;this.applyKeybindings(s,e,t);let a;e.configure===!1?a=((r=s.rolls)==null?void 0:r.map(i=>this.fromConfig(i,s)))??[]:a=await(e.applicationClass??this.DefaultConfigurationDialog).configure(s,e,t);for(const i of a)await i.evaluate();return a!=null&&a.length&&t.create!==!1&&await this.toMessage(a,t.data,{rollMode:t.rollMode}),a}static applyKeybindings(s,e,t){e.configure??(e.configure=!0)}get isFailure(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total<this.options.target:!1}get isSuccess(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total>=this.options.target:!1}static async toMessage(s,e={},{rollMode:t,create:a=!0}={}){for(const n of s)n._evaluated||await n.evaluate({allowInteractive:t!==CONST.DICE_ROLL_MODES.BLIND}),t??(t=n.options.rollMode);e=foundry.utils.mergeObject({sound:CONFIG.sounds.dice},e),e.rolls=s;const r=getDocumentClass("ChatMessage"),i=new r(e);return a?r.create(i.toObject(),{rollMode:t}):(t&&i.applyRollMode(t),i.toObject())}async evaluate(s={}){return this.preCalculateDiceTerms(s),super.evaluate(s)}evaluateSync(s={}){return this.preCalculateDiceTerms(s),super.evaluateSync(s)}preCalculateDiceTerms(s={}){this._evaluated||!s.maximize&&!s.minimize||(this.terms=this.terms.map(e=>{if(e instanceof $e&&e.modifiers.length){const t=!s.maximize,a=this.constructor.preCalculateTerm(e,{minimize:t});if(Number.isFinite(a))return new Ge({number:a,options:e.options})}return e}))}static preCalculateTerm(s,{minimize:e=!1}={}){let t=e?1:s.faces,a=s.number;const r=foundry.utils.deepClone(s.modifiers),i=new Set(["k","kh","kl"]),n=new Set(["d","dh","dl"]),l=new Set([...i,...n,"max","min"]);let c=!1;for(const m of r){const g=/(m[ai][xn]|[kd][hl]?)(\d+)?/i,d=m.match(g);if(!d)continue;d[0].length<d.input.length&&r.push(d.input.slice(d[0].length));let[,u,T]=d;if(u=u.toLowerCase(),!l.has(u))continue;c=!0;const h=parseInt(T)||(u==="max"||u==="min"?-1:1);if(h>0){if(u==="max"&&e||u==="min"&&!e)continue;u==="max"||u==="min"?t=Math.min(s.faces,h):i.has(u)?a=Math.min(a,h):n.has(u)&&(a=Math.max(1,a-h))}}return c?t*a:null}simplify(){var s,e;for(const t of this.dice){const a=t._number;a instanceof U&&a.isDeterministic&&(t._number=a.evaluateSync().total);const r=t._faces;r instanceof U&&r.isDeterministic&&(t._faces=r.evaluateSync().total),(e=(s=r.terms)==null?void 0:s[0])!=null&&e.flavor&&(t.options.flavor=r.terms[0].flavor)}this.resetFormula()}};D(U,"DefaultConfigurationDialog",X);let de=U;const{DiceTerm:Ve,FunctionTerm:xe,NumericTerm:Te,OperatorTerm:ie,ParentheticalTerm:ne,StringTerm:j}=foundry.dice.terms;class ue extends de{constructor(s,e,t){super(s,e,t),this.options.preprocessed||this.preprocessFormula(),this.options.configured||this.configureDamage()}static fromConfig(s,e){const t=super.fromConfig(s,e);return e.critical&&t.configureDamage({critical:e.critical}),t}static async build(s={},e={},t={}){var a,r;return s.critical??(s.critical={}),(a=s.critical).multiplyNumeric??(a.multiplyNumeric=game.settings.get("dnd5e","criticalDamageModifiers")),(r=s.critical).powerfulCritical??(r.powerfulCritical=game.settings.get("dnd5e","criticalDamageMaxDice")),super.build(s,e,t)}static applyKeybindings(s,e,t){var r;const a={normal:re(s.event,"skipDialogNormal")||re(s.event,"skipDialogDisadvantage"),critical:re(s.event,"skipDialogAdvantage")};e.configure??(e.configure=Object.values(a).every(i=>!i));for(const i of s.rolls)i.options??(i.options={}),(r=i.options).isCritical??(r.isCritical=a.critical)}get isCritical(){return this.options.isCritical===!0}preprocessFormula(){for(let[s,e]of this.terms.entries()){const t=this.terms[s+1],a=this.terms[s-1];if(e instanceof j&&/^d\d+/.test(e.term)&&!(a instanceof ne)){const r=`1${e.term}`,i=new Roll(r).terms[0];this.terms.splice(s,1,i),e=i}else if(e instanceof ne&&a instanceof j&&a.term.match(/^[0-9]*d$/)){if(e.isDeterministic){let r=`${a.term}${e.evaluate().total}`,i=2;t instanceof j&&(r+=t.term,i+=1);const n=new Roll(r).terms[0];this.terms.splice(s-1,i,n),e=n}}else if((e instanceof ne||e instanceof xe)&&t instanceof j&&t.term.match(/^d[0-9]*$/)&&e.isDeterministic){const r=`${e.evaluate().total}${t.term}`,i=new Roll(r).terms[0];this.terms.splice(s,2,i),e=i}}this.resetFormula(),this.options.preprocessed=!0}configureDamage({critical:s={}}={}){var t;foundry.utils.mergeObject(s,this.options.critical??{});const e=new Map;for(let[a,r]of this.terms.entries())if(r instanceof Ve){if(r._number instanceof Roll){if(!r._number.isDeterministic)continue;r._number._evaluated||r._number.evaluateSync()}if(r.options.baseNumber=r.options.baseNumber??r.number,r.number=r.options.baseNumber,this.isCritical){let i=s.multiplier??2;if(s.powerfulCritical){const l=Roll.create(r.formula).evaluateSync({maximize:!0}).total;if(l>0){const c=((t=r.flavor)==null?void 0:t.toLowerCase().trim())??game.i18n.localize("DND5E.PowerfulCritical");e.set(c,(e.get(c)??0)+l)}i=Math.max(1,i-1)}let n=s.bonusDice&&a===0?s.bonusDice:0;r.alter(i,n),r.options.critical=!0}}else s.multiplyNumeric&&r instanceof Te&&(r.options.baseNumber=r.options.baseNumber??r.number,r.number=r.options.baseNumber,this.isCritical&&(r.number*=s.multiplier??2,r.options.critical=!0));if(s.powerfulCritical&&e.size)for(const[a,r]of e.entries())this.terms.push(new ie({operator:"+"})),this.terms.push(new Te({number:r,options:{flavor:a}}));if(this.isCritical&&s.bonusDamage){const a=new Roll(s.bonusDamage,this.data);a.terms[0]instanceof ie||this.terms.push(new ie({operator:"+"})),this.terms.push(...a.terms)}this.resetFormula(),this.options.configured=!0}async configureDialog(s={},e={}){return(await this.constructor.configureDialog([this],s,e))[0]??null}static async configureDialog(s,{title:e,defaultRollMode:t,defaultCritical:a=!1,template:r,allowCritical:i=!0}={},n={}){return foundry.utils.logCompatibilityWarning("The `configureDialog` on DamageRoll has been deprecated and is now handled through `DamageRoll.build`.",{since:"DnD5e 4.0",until:"DnD5e 4.4"}),await this.DefaultConfigurationDialog.configure({critical:{allow:i}},{options:{title:e}},{rollMode:t})}}D(ue,"DefaultConfigurationDialog",ce);const{Coin:Ue,DiceTerm:be,Die:qe,FunctionTerm:Be,NumericTerm:Q,OperatorTerm:L,ParentheticalTerm:Re,RollTerm:ze}=foundry.dice.terms;function _e(o,{preserveFlavor:s=!1,deterministic:e=!1}={}){var c;let t;try{t=new Roll(o)}catch(m){console.warn(`Unable to simplify formula '${o}': ${m}`)}if(Roll.validate(t.formula),s||(t.terms=Roll.parse(t.formula.replace(ze.FLAVOR_REGEXP,""))),e){t.terms=ge(t.terms);const m=[];let g=[],d=!1,u;for(let T=t.terms.length-1;T>=0;){let h,f=t.terms[T];if(f instanceof Re&&(h=_e(f.term,{preserveFlavor:s,deterministic:e})),Number.isNumeric(h)){const b={number:h};s&&(b.options={flavor:f.flavor}),f=new Q(b)}for(u=f.isDeterministic&&(!d||u),u?g.unshift(f):g=[],f=t.terms[--T];f instanceof L;){if(u&&g.unshift(f),f.operator==="*"||f.operator==="/"||f.operator==="%")d=!0;else for(d=!1;g.length;)m.unshift(g.pop());f=t.terms[--T]}}if(u)for(;g.length;)m.unshift(g.pop());t.terms=m}if(t.terms=ge(t.terms),/[*/]/.test(t.formula))return t.isDeterministic&&!/d\(/.test(t.formula)&&(!/\[/.test(t.formula)||!s)?String(new Roll(t.formula).evaluateSync().total):t.constructor.getFormula(t.terms);t.terms=Se(t.terms),t.terms=Roll.simplifyTerms(t.terms);let{poolTerms:a,diceTerms:r,mathTerms:i,numericTerms:n}=We(t.terms);n=Ke(n??[]),r=Ye(r??[]);const l=[r,a,i,n].flat().filter(Boolean);return((c=l[0])==null?void 0:c.operator)==="+"&&l.shift(),t.constructor.getFormula(l)}function ge(o){return o.reduce((s,e)=>{const t=s[s.length-1],a=new Set([t==null?void 0:t.operator,e.operator]);return a.has(void 0)?s.push(e):a.has("+")&&a.has("-")?s.splice(-1,1,new L({operator:"-"})):a.has("-")&&a.size===1?s.splice(-1,1,new L({operator:"+"})):a.has("+")||s.push(e),s},[])}function Ke(o){const s=[],{annotated:e,unannotated:t}=Ae(o);if(t.length){const a=Roll.safeEval(Roll.getFormula(t));if(a===0)return[...e];a>0&&s.push(new L({operator:"+"})),s.push(new Q({number:a}))}return[...s,...e]}function Ye(o){const{annotated:s,unannotated:e}=Ae(o),t=e.reduce((r,i,n)=>{var d;if(i instanceof L)return r;const l=((d=i.constructor)==null?void 0:d.name)==="Coin",c=l?"c":i.faces,m=l?"":i.modifiers.filterJoin(""),g=`${e[n-1].operator}${c}${m}`;return r[g]??(r[g]={}),i._number instanceof Roll&&i._number.isDeterministic&&i._number.evaluateSync(),r[g].number=(r[g].number??0)+i.number,l||(r[g].modifiers=(r[g].modifiers??[]).concat(i.modifiers)),r},{});return[...Object.entries(t).flatMap(([r,{number:i,modifiers:n}])=>[new L({operator:r.charAt(0)}),r.slice(1)==="c"?new Ue({number:i}):new qe({number:i,faces:parseInt(r.slice(1)),modifiers:[...new Set(n)]})]),...s]}function Se(o){return o=o.reduce((s,e)=>{if(e instanceof Re)if(e.isDeterministic){const t=new Roll(e.term);e=new Q({number:t.evaluateSync().total})}else{const t=new Roll(e.term).terms;e=Se(t)}return s.push(e),s},[]),ge(o.flat())}function We(o){return o[0]instanceof L||o.unshift(new L({operator:"+"})),o.reduce((s,e,t)=>{let a;e instanceof be?a=be:e instanceof Be&&e.isDeterministic?a=Q:a=e.constructor;const r=`${a.name.charAt(0).toLowerCase()}${a.name.substring(1)}s`;return(s[r]=s[r]??[]).push(o[t-1],e),s},{})}function Ae(o){return o.reduce((s,e,t)=>(e instanceof L||s[e.flavor?"annotated":"unannotated"].push(o[t-1],e),s),{annotated:[],unannotated:[]})}class le extends ChatMessage{constructor(){super(...arguments);D(this,"_highlighted",null)}get canApplyDamage(){var t,a,r;const e=(a=(t=this.flags.dnd5e)==null?void 0:t.roll)==null?void 0:a.type;return e&&e!=="damage"?!1:this.isRoll&&this.isContentVisible&&!!((r=canvas.tokens)!=null&&r.controlled.length)}get canSelectTargets(){var e,t;return((t=(e=this.flags.dnd5e)==null?void 0:e.roll)==null?void 0:t.type)!=="attack"?!1:this.isRoll&&this.isContentVisible}get isRoll(){var e;return super.isRoll&&!((e=this.flags.dnd5e)!=null&&e.rest)}get shouldDisplayChallenge(){if(game.user.isGM||this.author===game.user)return!0;switch(game.settings.get("dnd5e","challengeVisibility")){case"all":return!0;case"player":return!this.author.isGM;default:return!1}}static migrateData(e){if(e=super.migrateData(e),foundry.utils.hasProperty(e,"flags.dnd5e.itemData")&&(foundry.utils.setProperty(e,"flags.dnd5e.item.data",e.flags.dnd5e.itemData),delete e.flags.dnd5e.itemData),foundry.utils.hasProperty(e,"flags.dnd5e.use")){const t=e.flags.dnd5e.use;foundry.utils.setProperty(e,"flags.dnd5e.messageType","usage"),t.type&&foundry.utils.setProperty(e,"flags.dnd5e.item.type",t.type),t.itemId&&foundry.utils.setProperty(e,"flags.dnd5e.item.id",t.itemId),t.itemUuid&&foundry.utils.setProperty(e,"flags.dnd5e.item.uuid",t.itemUuid)}return e}prepareData(){super.prepareData(),this._shimFlags(),dnd5e.registry.messages.track(this)}async getHTML(...e){const t=await super.getHTML();return this._displayChatActionButtons(t),this._highlightCriticalSuccessFailure(t),game.settings.get("dnd5e","autoCollapseItemCards")&&t.find(".description.collapsible").each((a,r)=>r.classList.add("collapsed")),this._enrichChatCard(t[0]),this._collapseTrays(t[0]),this._activateActivityListeners(t[0]),Hooks.callAll("dnd5e.renderChatMessage",this,t[0]),t}_collapseTrays(e){let t;switch(game.settings.get("dnd5e","autoCollapseChatTrays")){case"always":t=!0;break;case"never":t=!1;break;case"older":t=this.timestamp<Date.now()-5*60*1e3;break}for(const a of e.querySelectorAll(".card-tray, .effects-tray"))a.classList.toggle("collapsed",t);for(const a of e.querySelectorAll("damage-application, effect-application"))a.toggleAttribute("open",!t)}_displayChatActionButtons(e){var a;const t=e.find(".dnd5e.chat-card, .dnd5e2.chat-card");if(t.length>0){const r=e.find(".flavor-text");r.text()===e.find(".item-name").text()&&r.remove(),this.shouldDisplayChallenge&&(t[0].dataset.displayChallenge="");const i=game.actors.get(this.speaker.actor),n=game.user.isGM||(i==null?void 0:i.isOwner)||this.author.id===game.user.id;for(const l of e[0].querySelectorAll(".card-buttons button"))l.dataset.visibility!=="all"&&(l.dataset.visibility==="gm"&&!game.user.isGM||!n||(a=this.getAssociatedActivity())!=null&&a.shouldHideChatButton(l,this))&&(l.hidden=!0)}}_highlightCriticalSuccessFailure(e){if(!this.isContentVisible||!this.rolls.length)return;const t=this.getOriginatingMessage(),a=t==null?void 0:t.shouldDisplayChallenge,r=game.user.isGM||game.settings.get("dnd5e","attackRollVisibility")!=="none";function i(n){const l=document.createElement("i");return l.classList.add("fas",n),l.setAttribute("inert",""),l}for(let[n,l]of this.rolls.entries()){const c=l.dice[0];if((c==null?void 0:c.faces)!==20||(c==null?void 0:c.values.length)!==1)continue;l=dnd5e.dice.D20Roll.fromRoll(l);const m=l.dice[0];if("success"in m.results[0]||m.options.marginSuccess||m.options.marginFailure)continue;const d=e.find(".dice-total")[n];if(!d)continue;const u=["attack","death"].includes(this.getFlag("dnd5e","roll.type")),h=this.getFlag("dnd5e","roll.type")==="attack"?r:a;m.options.target&&h&&(l.total>=m.options.target?d.classList.add("success"):d.classList.add("failure")),u&&l.isCritical&&d.classList.add("critical"),u&&l.isFumble&&d.classList.add("fumble");const f=document.createElement("div");f.classList.add("icons"),d.classList.contains("critical")?f.append(i("fa-check"),i("fa-check")):d.classList.contains("fumble")?f.append(i("fa-xmark"),i("fa-xmark")):d.classList.contains("success")?f.append(i("fa-check")):d.classList.contains("failure")&&f.append(i("fa-xmark")),f.children.length&&d.append(f)}}_enrichChatCard(e){var f,b,A,H,z,fe;const t=this.getAssociatedActor();let a,r;this.isContentVisible?(a=(t==null?void 0:t.img)??this.author.avatar,r=this.alias):(a=this.author.avatar,r=this.author.name);const i=document.createElement("a");i.classList.add("avatar"),t&&(i.dataset.uuid=t.uuid),i.innerHTML=`<img src="${a}" alt="${r}">`;const n=document.createElement("span");n.classList.add("name-stacked"),n.innerHTML=`<span class="title">${r}</span>`;const l=document.createElement("span");l.classList.add("subtitle"),this.whisper.length&&(l.innerText=((f=e.querySelector(".whisper-to"))==null?void 0:f.innerText)??""),r!==((b=this.author)==null?void 0:b.name)&&!l.innerText.length&&(l.innerText=((A=this.author)==null?void 0:A.name)??""),n.appendChild(l);const c=e.querySelector(".message-sender");c==null||c.replaceChildren(i,n),(H=e.querySelector(".whisper-to"))==null||H.remove();const m=e.querySelector(".message-metadata"),g=m.querySelector(".message-delete");game.user.isGM||g==null||g.remove();const d=document.createElement("a");d.setAttribute("aria-label",game.i18n.localize("DND5E.AdditionalControls")),d.classList.add("chat-control"),d.dataset.contextMenu="",d.innerHTML='<i class="fas fa-ellipsis-vertical fa-fw"></i>',m.appendChild(d),e.querySelectorAll("i.dnd5e-icon").forEach(S=>{const M=document.createElement("dnd5e-icon");M.src=S.dataset.src,S.replaceWith(M)});const u=this.getFlag("dnd5e","roll"),T=this.getAssociatedItem(),h=this.getAssociatedActivity();if(this.isContentVisible&&T&&u){const S=u.type==="damage"&&((z=this.rolls[0])==null?void 0:z.isCritical),M=u.type==="damage"?S?game.i18n.localize("DND5E.CriticalHit"):game.i18n.localize("DND5E.DamageRoll"):u.type==="attack"?(h==null?void 0:h.getActionLabel(u.attackMode))??"":((fe=T.system.type)==null?void 0:fe.label)??game.i18n.localize(CONFIG.Item.typeLabels[T.type]),Z=document.createElement("div");Z.classList.add("dnd5e2","chat-card"),Z.innerHTML=`
        <section class="card-header description ${S?"critical":""}">
          <header class="summary">
            <img class="gold-icon" src="${T.img}" alt="${T.name}">
            <div class="name-stacked">
              <span class="title">${T.name}</span>
              <span class="subtitle">${M}</span>
            </div>
          </header>
        </section>
      `,e.querySelector(".message-header .flavor-text").remove(),e.querySelector(".message-content").insertAdjacentElement("afterbegin",Z)}this._enrichAttackTargets(e),this.isContentVisible?(e.querySelectorAll(".dice-tooltip").forEach((S,M)=>{!(u instanceof ue)&&this.rolls[M]&&this._enrichRollTooltip(this.rolls[M],S)}),this._enrichDamageTooltip(this.rolls.filter(S=>S instanceof ue),e),this._enrichEnchantmentTooltip(e),e.querySelectorAll(".dice-roll").forEach(S=>S.addEventListener("click",this._onClickDiceRoll.bind(this)))):e.querySelectorAll(".dice-roll").forEach(S=>S.classList.add("secret-roll")),this._enrichUsageEffects(e),i.addEventListener("click",this._onTargetMouseDown.bind(this)),i.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),i.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}_enrichRollTooltip(e,t){const a=Number(_e(e._formula,{deterministic:!0}));if(!a)return;const r=a<0?"-":"+",i=document.createElement("section");i.classList.add("tooltip-part","constant"),i.innerHTML=`
      <div class="dice">
        <ol class="dice-rolls"></ol>
        <div class="total">
          <span class="value"><span class="sign">${r}</span>${Math.abs(a)}</span>
        </div>
      </div>
    `,t.appendChild(i)}_enrichAttackTargets(e){var m,g;const t=this.rolls[0],a=game.settings.get("dnd5e","attackRollVisibility");if(!(game.user.isGM||a!=="none")||!(t instanceof dnd5e.dice.D20Roll))return;const i=CONFIG.DND5E.weaponMasteries[t.options.mastery];if(i){const d=document.createElement("p");d.classList.add("supplement");let u=i.label;i.reference&&(u=`
        <a class="content-link" draggable="true" data-link data-uuid="${i.reference}"
           data-tooltip="${u}">${u}</a>
      `),d.innerHTML=`<strong>${game.i18n.format("DND5E.WEAPON.Mastery.Flavor")}</strong> ${u}`,(m=e.querySelector(".chat-card")??e.querySelector(".message-content"))==null||m.appendChild(d)}const n=this.getFlag("dnd5e","targets");if(!(n!=null&&n.length))return;const l=document.createElement("div");l.classList.add("dnd5e2"),l.innerHTML=`
      <div class="card-tray targets-tray collapsible collapsed">
        <label class="roboto-upper">
          <i class="fas fa-bullseye" inert></i>
          <span>${game.i18n.localize("DND5E.TargetPl")}</span>
          <i class="fas fa-caret-down" inert></i>
        </label>
        <div class="collapsible-content">
          <ul class="dnd5e2 unlist evaluation wrapper"></ul>
        </div>
      </div>
    `;const c=l.querySelector("ul");c.innerHTML=n.map(({name:d,ac:u,uuid:T})=>{!game.user.isGM&&a!=="all"&&(u="");const h=!t.isCritical&&(t.total<u||t.isFumble);return[`
        <li data-uuid="${T}" class="target ${h?"miss":"hit"}">
          <i class="fas ${h?"fa-times":"fa-check"}"></i>
          <div class="name">${d}</div>
          ${u!==""?`
          <div class="ac">
            <i class="fas fa-shield-halved"></i>
            <span>${u===null?"&infin;":u}</span>
          </div>
          `:""}
        </li>
      `,h]}).sort((d,u)=>d[1]===u[1]?0:d[1]?1:-1).reduce((d,[u])=>d+u,""),c.querySelectorAll("li.target").forEach(d=>{d.addEventListener("click",this._onTargetMouseDown.bind(this)),d.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),d.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}),(g=e.querySelector(".message-content"))==null||g.appendChild(l)}_enrichDamageTooltip(e,t){var g;if(!e.length)return;const a=CONFIG.DND5E.aggregateDamageDisplay?ae(e):e;let{formula:r,total:i,breakdown:n}=a.reduce((d,u)=>(d.formula.push(CONFIG.DND5E.aggregateDamageDisplay?u.formula:` + ${u.formula}`),d.total+=u.total,d.breakdown.push(this._simplifyDamageRoll(u)),d),{formula:[],total:0,breakdown:[]});r=r.join("").replace(/^ \+ /,""),t.querySelectorAll(".dice-roll").forEach(d=>d.remove());const l=document.createElement("div");l.classList.add("dice-roll");const c=n.reduce((d,{type:u,total:T,constant:h,dice:f})=>{const b=CONFIG.DND5E.damageTypes[u]??CONFIG.DND5E.healingTypes[u];return`${d}
        <section class="tooltip-part">
          <div class="dice">
            <ol class="dice-rolls">
              ${f.reduce((A,{result:H,classes:z})=>`
                ${A}<li class="roll ${z}">${H}</li>
              `,"")}
              ${h?`
              <li class="constant"><span class="sign">${h<0?"-":"+"}</span>${Math.abs(h)}</li>
              `:""}
            </ol>
            <div class="total">
              ${b?`<img src="${b.icon}" alt="${b.label}">`:""}
              <span class="label">${(b==null?void 0:b.label)??""}</span>
              <span class="value">${T}</span>
            </div>
          </div>
        </section>
      `},"");l.innerHTML=`
      <div class="dice-result">
        <div class="dice-formula">${r}</div>
        <div class="dice-tooltip-collapser">
          <div class="dice-tooltip">
            ${c}
          </div>
        </div>
        <h4 class="dice-total">${i}</h4>
      </div>
    `,t.querySelector(".message-content").appendChild(l);const m=this.getFlag("dnd5e","roll.damageOnSave");if(m){const d=document.createElement("p");d.classList.add("supplement"),d.innerHTML=`<strong>${game.i18n.format("DND5E.SAVE.OnSave")}</strong> ${game.i18n.localize(`DND5E.SAVE.FIELDS.damage.onSave.${m.capitalize()}`)}`,(g=t.querySelector(".chat-card, .message-content"))==null||g.appendChild(d)}if(game.user.isGM){const d=document.createElement("damage-application");d.classList.add("dnd5e2"),d.damages=ae(e,{respectProperties:!0}).map(u=>({value:u.total,type:u.options.type,properties:new Set(u.options.properties??[])})),t.querySelector(".message-content").appendChild(d)}}_simplifyDamageRoll(e){const t={type:e.options.type,total:e.total,constant:0,dice:[]};let a=!1;for(let r=e.terms.length-1;r>=0;){const i=e.terms[r--];if(!(i instanceof foundry.dice.terms.NumericTerm)&&!(i instanceof foundry.dice.terms.DiceTerm))continue;const n=i.total;i instanceof foundry.dice.terms.DiceTerm&&t.dice.push(...i.results.map(m=>({result:i.getResultLabel(m),classes:i.getResultCSS(m).filterJoin(" ")})));let l=1,c=e.terms[r];for(;c instanceof foundry.dice.terms.OperatorTerm;)["+","-"].includes(c.operator)||(a=!0),c.operator==="-"&&(l*=-1),c=e.terms[--r];i instanceof foundry.dice.terms.NumericTerm&&(t.constant+=n*l)}return a&&(t.constant=null),t}_enrichEnchantmentTooltip(e){var n,l;if(!this.getFlag("dnd5e","use.enchantmentProfile"))return;const a=this.getFlag("dnd5e","use.concentrationId");if(a&&!((n=this.getAssociatedActor())!=null&&n.effects.get(a)))return;const r=document.createElement("enchantment-application");r.classList.add("dnd5e2");const i=e.querySelector(".card-footer");i?i.insertAdjacentElement("beforebegin",r):(l=e.querySelector(".chat-card"))==null||l.append(r)}_enrichUsageEffects(e){var i;const t=this.getAssociatedItem();let a;if(this.getFlag("dnd5e","messageType")==="usage")a=(i=this.getFlag("dnd5e","use.effects"))==null?void 0:i.map(n=>t==null?void 0:t.effects.get(n));else{if(this.getFlag("dnd5e","roll.type"))return;a=t==null?void 0:t.effects.filter(n=>{var l;return n.type!=="enchantment"&&!((l=t.getFlag("dnd5e","riders.effect"))!=null&&l.includes(n.id))})}if(a=a==null?void 0:a.filter(n=>n&&(game.user.isGM||n.transfer&&this.author.id===game.user.id)),!(a!=null&&a.length))return;const r=document.createElement("effect-application");r.classList.add("dnd5e2"),r.effects=a,e.querySelector(".message-content").appendChild(r)}static addChatMessageContextOptions(e,t){const a=([i])=>{var n;return(n=game.messages.get(i.dataset.messageId))==null?void 0:n.canApplyDamage},r=([i])=>{var n;return(n=game.messages.get(i.dataset.messageId))==null?void 0:n.canSelectTargets};return t.push({name:game.i18n.localize("DND5E.ChatContextDamage"),icon:'<i class="fas fa-user-minus"></i>',condition:a,callback:i=>{var n;return(n=game.messages.get(i.data("messageId")))==null?void 0:n.applyChatCardDamage(i,1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHealing"),icon:'<i class="fas fa-user-plus"></i>',condition:a,callback:i=>{var n;return(n=game.messages.get(i.data("messageId")))==null?void 0:n.applyChatCardDamage(i,-1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextTempHP"),icon:'<i class="fas fa-user-clock"></i>',condition:a,callback:i=>{var n;return(n=game.messages.get(i.data("messageId")))==null?void 0:n.applyChatCardTemp(i)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextDoubleDamage"),icon:'<i class="fas fa-user-injured"></i>',condition:a,callback:i=>{var n;return(n=game.messages.get(i.data("messageId")))==null?void 0:n.applyChatCardDamage(i,2)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHalfDamage"),icon:'<i class="fas fa-user-shield"></i>',condition:a,callback:i=>{var n;return(n=game.messages.get(i.data("messageId")))==null?void 0:n.applyChatCardDamage(i,.5)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextSelectHit"),icon:'<i class="fas fa-bullseye"></i>',condition:r,callback:([i])=>{var n;return(n=game.messages.get(i.dataset.messageId))==null?void 0:n.selectTargets(i,"hit")},group:"attack"},{name:game.i18n.localize("DND5E.ChatContextSelectMiss"),icon:'<i class="fas fa-bullseye"></i>',condition:r,callback:([i])=>{var n;return(n=game.messages.get(i.dataset.messageId))==null?void 0:n.selectTargets(i,"miss")},group:"attack"}),t}_activateActivityListeners(e){var t;(t=this.getAssociatedActivity())==null||t.activateChatListeners(this,e)}async _onTargetMouseDown(e){var n;e.stopPropagation();const t=e.currentTarget.dataset.uuid,a=fromUuidSync(t),r=((n=a==null?void 0:a.token)==null?void 0:n.object)??(a==null?void 0:a.getActiveTokens()[0]);if(!r||!a.testUserPermission(game.user,"OBSERVER"))return;const i=!e.shiftKey;if(r.controlled)r.release();else return r.control({releaseOthers:i}),canvas.animatePan(r.center)}_onTargetHoverIn(e){var i;const t=e.currentTarget.dataset.uuid,a=fromUuidSync(t),r=((i=a==null?void 0:a.token)==null?void 0:i.object)??(a==null?void 0:a.getActiveTokens()[0]);r&&r.isVisible&&(r.controlled||r._onHoverIn(e,{hoverOutOthers:!0}),this._highlighted=r)}_onTargetHoverOut(e){this._highlighted&&this._highlighted._onHoverOut(e),this._highlighted=null}applyChatCardDamage(e,t){const a=ae(this.rolls,{respectProperties:!0}).map(r=>({value:r.total,type:r.options.type,properties:new Set(r.options.properties??[])}));return Promise.all(canvas.tokens.controlled.map(r=>{var i;return(i=r.actor)==null?void 0:i.applyDamage(a,{multiplier:t,invertHealing:!1,ignore:!0})}))}selectTargets(e,t){if(!(canvas!=null&&canvas.ready))return;const a=e.closest("[data-message-id]").querySelectorAll(`.evaluation li.target.${t}`),r=new Set(Array.from(a).map(i=>i.dataset.uuid));canvas.tokens.releaseAll(),r.forEach(i=>{var c;const n=fromUuidSync(i);if(!n)return;const l=n.isToken?[(c=n.token)==null?void 0:c.object]:n.getActiveTokens();for(const m of l)m!=null&&m.isVisible&&n.testUserPermission(game.user,"OWNER")&&m.control({releaseOthers:!1})})}applyChatCardTemp(e){const t=this.rolls.reduce((a,r)=>a+r.total,0);return Promise.all(canvas.tokens.controlled.map(a=>{var r;return(r=a.actor)==null?void 0:r.applyTempHP(t)}))}_onClickDiceRoll(e){e.stopPropagation(),e.currentTarget.classList.toggle("expanded")}static onRenderChatPopout(e,[t]){var r;const a=t.querySelector(".header-button.close");a.innerHTML='<i class="fas fa-times"></i>',a.dataset.tooltip=game.i18n.localize("Close"),a.setAttribute("aria-label",a.dataset.tooltip),(r=t.querySelector(".message-metadata [data-context-menu]"))==null||r.remove()}static onRenderChatLog([e]){game.settings.get("dnd5e","autoCollapseItemCards")||requestAnimationFrame(()=>{setTimeout(()=>ui.chat.scrollBottom(),250)})}static activateListeners(){window.addEventListener("keydown",this.toggleModifiers,{passive:!0}),window.addEventListener("keyup",this.toggleModifiers,{passive:!0}),window.addEventListener("blur",()=>this.toggleModifiers({releaseAll:!0}),{passive:!0})}static toggleModifiers({releaseAll:e=!1}={}){document.querySelectorAll(".chat-sidebar > ol").forEach(t=>{for(const a of Object.values(KeyboardManager.MODIFIER_KEYS))game.keyboard.isModifierActive(a)&&!e?t.dataset[`modifier${a}`]="":delete t.dataset[`modifier${a}`]})}_onDelete(e,t){super._onDelete(e,t),dnd5e.registry.messages.untrack(this)}getAssociatedActivity(){var t,a;const e=fromUuidSync(this.getFlag("dnd5e","activity.uuid"));return e||((a=(t=this.getAssociatedItem())==null?void 0:t.system.activities)==null?void 0:a.get(this.getFlag("dnd5e","activity.id")))}getAssociatedActor(){if(this.speaker.scene&&this.speaker.token){const e=game.scenes.get(this.speaker.scene),t=e==null?void 0:e.tokens.get(this.speaker.token);if(t)return t.actor}return game.actors.get(this.speaker.actor)}getAssociatedItem(){const e=fromUuidSync(this.getFlag("dnd5e","item.uuid"));if(e)return e;const t=this.getAssociatedActor();if(!t)return;const a=this.getFlag("dnd5e","item.data")??this.getOriginatingMessage().getFlag("dnd5e","item.data");if(a)return new Item.implementation(a,{parent:t})}getAssociatedRolls(e){return dnd5e.registry.messages.get(this.id,e)}getOriginatingMessage(){return game.messages.get(this.getFlag("dnd5e","originatingMessage"))??this}_shimFlags(){var t;const e=foundry.utils.getProperty(this,"flags.dnd5e");if((e==null?void 0:e.messageType)==="usage"&&(e!=null&&e.use)){const a="The item data in the `dnd5e.use` flag on `ChatMessage` is now `dnd5e.item.type`, `dnd5e.item.id`, and `dnd5e.item.uuid`. Checking for usage can now be done using the `dnd5e.messageType` flag.";Object.defineProperty(e.use,"type",{get(){var r;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(r=e.item)==null?void 0:r.type},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemId",{get(){var r;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(r=e.item)==null?void 0:r.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemUuid",{get(){var r;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(r=e.item)==null?void 0:r.uuid},configurable:!0,enumerable:!1})}else if((e==null?void 0:e.messageType)==="roll"&&(e!=null&&e.roll)){const a="The item data in the `dnd5e.roll` flag on `ChatMessage` is now `dnd5e.item.id` and `dnd5e.item.uuid`.";Object.defineProperty(e.roll,"itemId",{get(){var r;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(r=e.item)==null?void 0:r.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.roll,"itemUuid",{get(){var r;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(r=e.item)==null?void 0:r.uuid},configurable:!0,enumerable:!1})}(t=e==null?void 0:e.item)!=null&&t.data&&Object.defineProperty(e,"itemData",{get(){return foundry.utils.logCompatibilityWarning("The `dnd5e.itemData` flag on `ChatMessage` is now `dnd5e.item.data`.",{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),this.item.data},configurable:!0,enumerable:!1})}}const C=class C{static resetRollGetters(s){return s._total=s._evaluateTotal(),s.resetFormula(),s}static replaceTerms(s,e){return s.terms=e.terms,s._total=s._evaluateTotal(),s.resetFormula(),s}};D(C,"streamlineDDBRoll",async(s,e,t,a,r)=>{let i=null;p.log("streamlineDDBRoll",[s,e,{...a},r]);let n={},l=a.rolls[0];n.dialog={configure:!1},n.roll={formula:l.formula,consume:{resources:!1,spellSlot:!1},rolls:[],flags:{...a.flags,[N]:{processed:!0},dnd5e:{...a.flags.dnd5e},rsr5e:{processed:!0,quickRoll:!1}}},a.flags=n.roll.flags,n.message={flavor:a.flavor,speaker:a.speaker,whisper:a.whisper,user:game.user,blind:a.blind||w.isPrivateRoll(r.rollMode),rollMode:r.rollMode};try{switch(!0){case s===y.toHit.cls:i=k.getActivityFromItem(e,s)??null,await C.triggerAttack(i,a,r,n);break;case s===y.damage.cls:i=k.getActivityFromItem(e,s)??null,await C.triggerDamage(i,a,r,n);break;case(s===y.save.cls||s===y.check.cls):i=null,await C.triggerAbilityTest(s,a,r,n);break;case s===y.heal.cls:i=k.getActivityFromItem(e,s)??null,await C.triggerHeal(i,a,r,n);break;case s===y.custom.cls:i=null,await C.triggerCustomRoll(n,a,t,r);break;default:p.log("streamlineDDBRoll",[s])}}catch(c){return p.error("Error intercepting DDB roll",[c,s,e,a,r]),!1}return!0}),D(C,"triggerAttack",async(s,e,t,a)=>{let r;if(!s)throw new Error("No associated activity found.");a.roll.flags.dnd5e.roll={type:"attack"},a.roll.flags.rsr5e={processed:!0},a.roll.flags.dnd5e.targets=w.getTargetDescriptors();let i=await s.rollAttack(a.roll,a.dialog,{create:!1});if(i.length<1)return;C.replaceTerms(i[0],e.rolls[0]);const n=s.metadata.usage.chatCard;s.metadata.usage.chatCard=`modules/${N}/templates/ddb-attack-info.hbs`,r=await k.ddbglUse(s,a.roll,a.dialog,{create:!1,data:{rollMsg:e.content,rolls:i,speaker:a.message.speaker,flavor:`<span class="crlngn item-name">${s.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:a.roll.flags.rsr5e,[N]:{processed:!0,rollMode:t.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${s.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}}),r.message.rolls=i,r.message.flags.dnd5e.targets=w.getTargetDescriptors(),r.message.flags=r.message.flags??{},p.log("USAGE RESULTS",[r]),await le.create(r.message,{rollMode:t.rollMode}),s.metadata.usage.chatCard=n}),D(C,"triggerDamage",async(s,e,t,a)=>{let r;if(!s)throw new Error("No associated activity found.");s.attack||(r=await k.ddbglUse(s,a.roll,a.dialog,{create:!1}),p.log("ACTIVITY",[r]),await le.create(r.message,{rollMode:t.rollMode}));let i=await s.rollDamage(a.roll,a.dialog,{create:!1});i.length<1||(C.replaceTerms(i[0],e.rolls[0]),r||(r={message:a.message}),r.message.rolls=i,r.message.flags=r.message.flags??{},r.message.flags.rsr5e={processed:!0,quickRoll:!1},a.roll.flags.dnd5e.targets=w.getTargetDescriptors(),a.message.flags=a.roll.flags,a.message.flags={...a.message,dnd5e:a.roll.flags.dnd5e,rsr5e:a.roll.flags.rsr5e},await i[0].toMessage(a.message,{rollMode:t.rollMode}),s.attack||game.user.targets.forEach(n=>{n.actor.testUserPermission(game.user,"OWNER")&&n.control({releaseOthers:!1})}),setTimeout(()=>{w.removeTemplateForItem(s.item)},3e3))}),D(C,"triggerAbilityTest",async(s,e,t,a)=>{const r=w.parseDDBGLAbility(e.flags["ddb-game-log"].flavor);let i;a.roll.flags.dnd5e.roll={type:s===y.check.cls?"ability":"save"},r&&(a.roll.flags.dnd5e.roll.ability=r.abbrev),a.message.flags={...a.message,dnd5e:a.roll.flags.dnd5e,rsr5e:a.roll.flags.rsr5e},s===y.save.cls?i=await t.actor.rollSavingThrow({ability:r==null?void 0:r.abbrev},a.dialog,{create:!1}):s===y.check.cls&&(i=await t.actor.rollAbilityCheck({ability:r==null?void 0:r.abbrev},a.dialog,{create:!1}),p.log("triggerAbilityTest",[i,a.message])),!(i.length<1)&&(C.replaceTerms(i[0],e.rolls[0]),await i[0].toMessage(a.message,{rollMode:t.rollMode}))}),D(C,"triggerHeal",async(s,e,t,a)=>{let r;if(!s)throw new Error("No associated activity found.");r=await k.ddbglUse(s,a.roll,a.dialog,{create:!1}),p.log("ACTIVITY",[r]),await le.create(r.message,{rollMode:t.rollMode});let i=await s.rollDamage(a.roll,a.dialog,{create:!1,data:{flags:a.message.flags}});i.length<1||(C.replaceTerms(i[0],e.rolls[0]),r||(r={message:a.message}),r.message.rolls=i,r.message.flags=r.message.flags??{},r.message.flags.rsr5e={processed:!0,quickRoll:!1},a.roll.flags.dnd5e.targets=w.getTargetDescriptors(),a.message.flags={...a.message,dnd5e:a.roll.flags.dnd5e,rsr5e:a.roll.flags.rsr5e},await i[0].toMessage(a.message,{rollMode:t.rollMode}))}),D(C,"triggerCustomRoll",async(s,e,t,a)=>{s.message={...s.message,dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},await e.rolls[0].toMessage(e,{...a})});let me=C;const R=class R{static init(){R.registerHooks()}static registerHooks(){Hooks.once(O.INIT,()=>{R.isMidiOn=w.isModuleOn("midi-qol"),p.log("Initiating module",[],!0),R.registerActivityHooks(),R.registerRollHooks(),R.registerChatHooks(),R.registerTemplateHooks()}),Hooks.once(O.READY,()=>{_.registerSettings(),_.resetGamelogSettings()}),Hooks.on(O.CLOSE_SETTINGS_CONFIG,()=>{_.resetGamelogSettings()})}static registerActivityHooks(){Hooks.on(E.PRE_USE_ACTIVITY,je),Hooks.on(E.POST_USE_ACTIVITY,Xe)}static registerRollHooks(){Hooks.on(E.ROLL_ATTACK_V2,it),Hooks.on(E.ROLL_DAMAGE_V2,rt),Hooks.on(E.PRE_ROLL_V2,et),Hooks.on(E.PRE_ROLL_ATTACK_V2,st),Hooks.on(E.PRE_ROLL_DAMAGE_V2,at),Hooks.on(E.PRE_ROLL_SAVING_THROW,tt)}static registerChatHooks(){Hooks.on(E.RENDER_CHAT_MESSAGE,Ze),Hooks.on(O.PRE_CREATE_CHAT_MESSAGE,Je),Hooks.on(O.CREATE_CHAT_MESSAGE,Qe)}static registerTemplateHooks(){Hooks.on(O.REFRESH_MEASURED_TEMPLATE,nt)}static setupKeyListeners(){window.addEventListener("keydown",s=>{const e=s.key;R.keysPressed.indexOf(e)<0&&R.keysPressed.push(e),p.log("Keydown",[R.keysPressed])}),window.addEventListener("keyup",s=>{const e=s.key,t=R.keysPressed.indexOf(e);t>=0&&R.keysPressed.splice(t,1),p.log("Keyup",[R.keysPressed])})}};D(R,"keysPressed",[]),D(R,"isMidiOn",!1);let v=R;const je=async(o,s,e,t)=>(v.keysPressed.indexOf("Shift")==-1?e.configure=!1:e.configure=!0,p.log(E.PRE_USE_ACTIVITY,[o,s,e,t,v.keysPressed]),!0),Xe=async(o,s,e)=>(p.log(E.POST_USE_ACTIVITY,[o,s,e]),!0),Je=(o,s,e,t)=>{var g,d,u,T;let a=!1,r,i,n,l,c=!1;const m={...o};if(i=((g=o.getFlag("ddb-game-log","cls"))==null?void 0:g.toLowerCase())||"",c=o.getFlag(N,"processed")||!1,p.log(O.PRE_CREATE_CHAT_MESSAGE,[i,o,{...s},e]),i&&!c)if(r=s.actor||game.actors.get(s.speaker.actor)||null,n=((u=(d=s.flags)==null?void 0:d["ddb-game-log"])==null?void 0:u.itemId)||"",r){a=!0,m.flags={...m.flags,...s.flags},m.flags[N]&&(m.flags[N].processed=!0,c=!0),l=n?r.items.find(b=>b.id===n):null;const h=document.createElement("div");h.innerHTML=s.flavor;let f=(T=h==null?void 0:h.querySelector("span:first-child"))==null?void 0:T.innerHTML.replace(":","");if(l||(l=f?r.items.find(b=>b.name.toLowerCase()===f.toLowerCase()):null,l||(l=r.items.find(b=>b.name.toLowerCase()===(f+" (Legacy)").toLowerCase()))),!l&&(i===y.toHit.cls||i===y.damage.cls||i===y.heal.cls))return p.error("Could not find an item for the roll",[i,r.items]),!0;me.streamlineDDBRoll(i,l,f,m,s)}else return p.warn("Could not find the actor from DDB Gamelog roll"),!0;return!a||c},Qe=(o,s,e)=>{p.log(O.CREATE_CHAT_MESSAGE,[o,s,e])},Ze=(o,s)=>{let e=s.querySelector(".message-sender .subtitle"),t=s.querySelector(".message-sender .flavor-text"),a=s.querySelector(".message-header .flavor-text");s.classList.remove("ddb-game-log-open-card"),s.classList.add("crlngn");const r=(a==null?void 0:a.innerHTML)||"";p.log(E.RENDER_CHAT_MESSAGE,[r,o,s,s.querySelector(".message-header .flavor-text")]),r!==""&&(e&&(e.innerHTML=r),t&&(t.innerHTML=r))},et=(o,s,e)=>{p.log(E.PRE_ROLL_V2,[o,s,e]),s.configure=!1},tt=(o,s,e)=>{p.log(E.PRE_ROLL_SAVING_THROW,[o,s,e])},st=(o,s,e)=>(p.log(E.PRE_ROLL_ATTACK_V2,[o,s,e,v.keysPressed]),v.keysPressed.indexOf("Shift")==-1&&(s.configure=!1),!0),at=(o,s,e)=>(p.log(E.PRE_ROLL_DAMAGE_V2,[o,s,e,v.keysPressed]),v.keysPressed.indexOf("Shift")==-1&&(s.configure=!1),!0),rt=(o,s,e)=>{p.log(E.ROLL_DAMAGE_V2,[game])},it=async(o,s)=>{p.log(E.ROLL_ATTACK_V2,[o,s])},nt=(o,s)=>{var e;if(o.isOwner){(e=canvas.tokens.placeables[0])==null||e.setTarget(!1,{releaseOthers:!0});for(let t of canvas.tokens.placeables)o.shape.contains(t.center.x-o.x,t.center.y-o.y)&&t.setTarget(!t.isTargeted,{releaseOthers:!1})}};v.init();
//# sourceMappingURL=module.js.map
